#!/bin/bash

SCRIPT=`basename ${BASH_SOURCE[0]}`
ARGS=$(getopt --long "to:,message:,from:,attachment:,group:,queue" --options "" -n "$SCRIPT" -- "$@");

unset QUEUE

signal_send() {
  local TO="$1"
  local MESSAGE="$2"
  local OPTS="$3"
  ./signal -to="$TO" -message="${MESSAGE}" $OPTS
}

#Bad arguments
if [ $? -ne 0 ];
then
  exit 1
fi

eval set -- "$ARGS";

while true; do
  case "$1" in
    --from)
          shift
          FROM=$1
          shift
    ;;
    --to)
          shift
          TO=$1
          shift
    ;;
    --group)
          shift
          GROUP=$1
          shift
    ;;
    --message)
          shift
          MESSAGE="$1"
          shift
    ;;
    --attachment)
          shift
          ATTACHMENT=$1
          shift
    ;;
    --queue)
          shift
          QUEUE="true"
    ;;
    --)
      shift
      break
    ;;
    *)
      exit 1
    ;;
  esac
done

## check vars
[ -z $TO ] && exit 1
[ -z ${MESSAGE%% *} ] && exit 1

## change into signal directory
SOURCE="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd $SOURCE

## set extra options
unset OPTS

# attachment
if [ ! -z $ATTACHMENT ]; then
  OPTS="$OPTS -attachment=$ATTACHMENT"
fi

# group chat
if [ ! -z $GROUP ]; then
  OPTS="$OPTS -group=$GROUP"
fi

# check for sender
if [ ! -z $FROM ]; then
  MESSAGE="$FROM: $MESSAGE"
fi

## send the message

if [ ! -z $QUEUE ]; then
  if [ $(curl -sLk -m 5 -w "%{http_code}\\n" https://textsecure-service.whispersystems.org:443/v1/ -o /dev/null) != "000" ] ; then
    signal_send $TO "$MESSAGE" "$OPTS"
  else
    logger "unable to send signal message, adding to queue..."
    mkdir -p queue
    UUID=$(cat /proc/sys/kernel/random/uuid)
    echo "TO=\"$TO\"" > queue/$UUID
    echo "MESSAGE=\"$MESSAGE\"" >> queue/$UUID
  fi
else
  signal_send $TO "$MESSAGE" "$OPTS"
fi
